

@article{hundhausen_meta-study_2002,
	title = {A Meta-Study of Algorithm Visualization Effectiveness},
	volume = {13},
	issn = {1045-926X},
	url = {http://www.sciencedirect.com/science/article/pii/S1045926X02902375},
	doi = {10.1006/jvlc.2002.0237},
	abstract = {Algorithm visualization ({AV}) technology graphically illustrates how algorithms work. Despite the intuitive appeal of the technology, it has failed to catch on in mainstream computer science education. Some have attributed this failure to the mixed results of experimental studies designed to substantiate {AV} technology's educational effectiveness. However, while several integrative reviews of {AV} technology have appeared, none has focused specifically on the software's effectiveness by analyzing this body of experimental studies as a whole. In order to better understand the effectiveness of {AV} technology, we present a systematic meta-study of 24 experimental studies. We pursue two separate analyses: an analysis ofindependent variables , in which we tie each study to a particular guiding learning theory in an attempt to determine which guiding theory has had the most predictive success; and an analysis of dependent variables, which enables us to determine which measurement techniques have been most sensitive to the learning benefits of {AV} technology. Our most significant finding is that how students use {AV} technology has a greater impact on effectiveness than what {AV} technology shows them. Based on our findings, we formulate an agenda for future research into {AV} effectiveness.},
	number = {3},
	urldate = {2014-12-06},
	journal = {Journal of Visual Languages \& Computing},
	author = {HUNDHAUSEN, CHRISTOPHER D. and DOUGLAS, SARAH A. and STASKO, JOHN T.},
	month = jun,
	year = {2002},
	keywords = {Algorithm visualization, Empirical studies of effectiveness, Literature reviews, Meta-analysis, Software visualization},
	pages = {259--290},
	file = {ScienceDirect Snapshot:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/BJNKUBH6/login.html:text/html}
}

@inproceedings{Hoffman-Assieme,
	address = {New York, {NY}, {USA}},
	series = {{UIST} '07},
	title = {Assieme: Finding and Leveraging Implicit References in a Web Search Interface for Programmers},
	isbn = {978-1-59593-679-0},
	shorttitle = {Assieme},
	url = {http://doi.acm.org/10.1145/1294211.1294216},
	doi = {10.1145/1294211.1294216},
	abstract = {Programmers regularly use search as part of the development process, attempting to identify an appropriate {API} for a problem, seeking more information about an {API}, and seeking samples that show how to use an {API}. However, neither general-purpose search engines nor existing code search engines currently fit their needs, in large part because the information programmers need is distributed across many pages. We present Assieme, a Web search interface that effectively supports common programming search tasks by combining information from Web-accessible Java Archive ({JAR}) files, {API} documentation, and pages that include explanatory text and sample code. Assieme uses a novel approach to finding and resolving implicit references to Java packages, types, and members within sample code on the Web. In a study of programmers performing searches related to common programming tasks, we show that programmers obtain better solutions, using fewer queries, in the same amount of time spent using a general Web search interface.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 20th Annual {ACM} Symposium on User Interface Software and Technology},
	publisher = {{ACM}},
	author = {Hoffmann, Raphael and Fogarty, James and Weld, Daniel S.},
	year = {2007},
	keywords = {implicit references, web search interfaces},
	pages = {13--22}
}

@inproceedings{bragdon_code_2010,
	address = {New York, {NY}, {USA}},
	series = {{ICSE} '10},
	title = {Code Bubbles: Rethinking the User Interface Paradigm of Integrated Development Environments},
	isbn = {978-1-60558-719-6},
	shorttitle = {Code Bubbles},
	url = {http://doi.acm.org/10.1145/1806799.1806866},
	doi = {10.1145/1806799.1806866},
	abstract = {Today's integrated development environments ({IDEs}) are hampered by their dependence on files and file-based editing. We propose a novel user interface that is based on collections of lightweight editable fragments, called bubbles, which when grouped together form concurrently visible working sets. In this paper we describe the design of a prototype {IDE} user interface for Java based on working sets. A quantitative evaluation shows that developers could expect to view a sizeable number of functions concurrently with relatively few {UI} operations. A qualitative user evaluation with 23 professional developers indicates a high level of excitement, interest, and potential benefits and uses.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 32Nd {ACM}/{IEEE} International Conference on Software Engineering - Volume 1},
	publisher = {{ACM}},
	author = {Bragdon, Andrew and Reiss, Steven P. and Zeleznik, Robert and Karumuri, Suman and Cheung, William and Kaplan, Joshua and Coleman, Christopher and Adeputra, Ferdi and LaViola, Jr., Joseph J.},
	year = {2010},
	keywords = {bubbles, concurrent views, debugging, human factors, integrated development environments, Navigation, source code, working set},
	pages = {455--464}
}

@inproceedings{kong_delta:_2012,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '12},
	title = {Delta: A Tool for Representing and Comparing Workflows},
	isbn = {978-1-4503-1015-4},
	shorttitle = {Delta},
	url = {http://doi.acm.org/10.1145/2207676.2208549},
	doi = {10.1145/2207676.2208549},
	abstract = {Tutorials and sample workflows for complicated, feature-rich software packages are widely available online. As a result users must differentiate between workflows to choose the most suitable one for their task. We present Delta, an interactive workflow visualization and comparison tool that helps users identify the tradeoffs between workflows. We conducted an initial study to identify the set of attributes users attend to when comparing workflows, finding that they consider result quality, their knowledge of commands, and the efficiency of the workflow. We then designed Delta to surface these attributes at three granularities: a high-level, clustered view; an intermediate-level list view that contains workflow summaries; and a low-level detail view that allows users to compare two individual workflows. Finally, we conducted an evaluation of Delta on a small corpus of 30 workflows and found that the intermediate list view provided the best information density. We conclude with thoughts on how such a workflow comparison system could be scaled up to larger corpora in the future.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Kong, Nicholas and Grossman, Tovi and Hartmann, Bj√∂rn and Agrawala, Maneesh and Fitzmaurice, George},
	year = {2012},
	keywords = {delta, search interfaces, tutorials, workflow comparison},
	pages = {1027--1036}
}

@inproceedings{islam_dependence_2010,
	address = {New York, {NY}, {USA}},
	series = {{SOFTVIS} '10},
	title = {Dependence Cluster Visualization},
	isbn = {978-1-4503-0028-5},
	url = {http://doi.acm.org/10.1145/1879211.1879227},
	doi = {10.1145/1879211.1879227},
	abstract = {Large clusters of mutual dependence have long been regarded as a problem impeding comprehension, testing, maintenance, and reverse engineering. An effective visualization can aid an engineer in addressing the presence of large clusters. Such a visualization is presented. It allows a program's dependence clusters to be considered from an abstract high level down thru a concrete source-level. At the highest level of abstraction, the visualization uses a heat-map (a color scheme) to efficiently overview the clusters found in an entire system. Other levels include three source code views that allow a user to "zoom" in on the clusters starting from the high-level system view, down through a file view, and then onto the actual source code where each cluster can be studied in detail. Also presented are two case studies, the first is the open-source calculator bc and the second is the industrial program copia, which performs signal processing. The studies consider qualitative evaluations of the visualization. From the results, it is seen that the visualization reveals high-level structure of programs and interactions between its components. The results also show that the visualization highlights potential candidates (functions/files) for re-factoring in bc and finds dependence pollution in copia.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 5th International Symposium on Software Visualization},
	publisher = {{ACM}},
	author = {Islam, Syed S. and Krinke, Jens and Binkley, David},
	year = {2010},
	keywords = {clustering, dependence, program comprehension, program slicing, re-engineering, reverse engineering, visualization},
	pages = {93--102}
}

@inproceedings{Mamykina-Fastest,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '11},
	title = {Design Lessons from the Fastest Q\&\#38;a Site in the West},
	isbn = {978-1-4503-0228-9},
	url = {http://doi.acm.org/10.1145/1978942.1979366},
	doi = {10.1145/1978942.1979366},
	abstract = {This paper analyzes a Question \& Answer site for programmers, Stack Overflow, that dramatically improves on the utility and performance of Q\&A systems for technical domains. Over 92\% of Stack Overflow questions about expert topics are answered - in a median time of 11 minutes. Using a mixed methods approach that combines statistical data analysis with user interviews, we seek to understand this success. We argue that it is not primarily due to an a priori superior technical design, but also to the high visibility and daily involvement of the design team within the community they serve. This model of continued community leadership presents challenges to both {CSCW} systems research as well as to attempts to apply the Stack Overflow model to other specialized knowledge domains.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Mamykina, Lena and Manoim, Bella and Mittal, Manas and Hripcsak, George and Hartmann, Bj√∂rn},
	year = {2011},
	keywords = {a, mixed methods analysis, q\&\#38},
	pages = {2857--2866}
}

@inproceedings{anderson_discovering_2012,
	address = {New York, {NY}, {USA}},
	series = {{KDD} '12},
	title = {Discovering Value from Community Activity on Focused Question Answering Sites: A Case Study of Stack Overflow},
	isbn = {978-1-4503-1462-6},
	shorttitle = {Discovering Value from Community Activity on Focused Question Answering Sites},
	url = {http://doi.acm.org/10.1145/2339530.2339665},
	doi = {10.1145/2339530.2339665},
	abstract = {Question answering (Q\&A) websites are now large repositories of valuable knowledge. While most Q\&A sites were initially aimed at providing useful answers to the question asker, there has been a marked shift towards question answering as a community-driven knowledge creation process whose end product can be of enduring value to a broad audience. As part of this shift, specific expertise and deep knowledge of the subject at hand have become increasingly important, and many Q\&A sites employ voting and reputation mechanisms as centerpieces of their design to help users identify the trustworthiness and accuracy of the content. To better understand this shift in focus from one-off answers to a group knowledge-creation process, we consider a question together with its entire set of corresponding answers as our fundamental unit of analysis, in contrast with the focus on individual question-answer pairs that characterized previous work. Our investigation considers the dynamics of the community activity that shapes the set of answers, both how answers and voters arrive over time and how this influences the eventual outcome. For example, we observe significant assortativity in the reputations of co-answerers, relationships between reputation and answer speed, and that the probability of an answer being chosen as the best one strongly depends on temporal characteristics of answer arrivals. We then show that our understanding of such properties is naturally applicable to predicting several important quantities, including the long-term value of the question and its answers, as well as whether a question requires a better answer. Finally, we discuss the implications of these results for the design of Q\&A sites.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 18th {ACM} {SIGKDD} International Conference on Knowledge Discovery and Data Mining},
	publisher = {{ACM}},
	author = {Anderson, Ashton and Huttenlocher, Daniel and Kleinberg, Jon and Leskovec, Jure},
	year = {2012},
	keywords = {question-answering, reputation, value prediction},
	pages = {850--858},
	file = {ACM Full Text PDF:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/UKQM4A8K/Anderson et al. - 2012 - Discovering Value from Community Activity on Focus.pdf:application/pdf}
}

@inproceedings{zhang_evaluation_2005,
	address = {Atlanta, Georgia},
	series = {dg.o '05},
	title = {Evaluation and Evolution of a Browse and Search Interface: Relation Browser++},
	shorttitle = {Evaluation and Evolution of a Browse and Search Interface},
	url = {http://dl.acm.org/citation.cfm?id=1065226.1065279},
	abstract = {We present in this paper the design and an evaluation of a novel interface called the Relation Browser++ ({RB}++) for searching and browsing large information collections. {RB}++ provides visualized category overviews of an information space and allows dynamic filtering and exploration of the result set by tightly coupling the browsing and searching functions. A user study was conducted to compare the effectiveness, efficiency and user satisfaction of completing various types of searching and browsing using the {RB}++ interface and a traditional form-fillin interface for a video library. An exploration set of tasks was also included to examine the effectiveness of and user satisfaction with the {RB}++ when applied to a large federal statistics website. The comparison study strongly supported that {RB}++ was more effective, efficient, and satisfying for completing data exploration tasks. Based on the results, efforts to automatically populate the underlying database using machine learning techniques are underway. Preliminary implementations for two large-scale federal statistical websites have been installed on government servers for internal evaluation.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 2005 National Conference on Digital Government Research},
	publisher = {Digital Government Society of North America},
	author = {Zhang, Junliang and Marchionini, Gary},
	year = {2005},
	keywords = {browse, category overview, dynamic query, interactive system, interface design, search, visualization},
	pages = {179--188}
}

@inproceedings{Brandt-Example,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '10},
	title = {Example-centric Programming: Integrating Web Search into the Development Environment},
	isbn = {978-1-60558-929-9},
	shorttitle = {Example-centric Programming},
	url = {http://doi.acm.org/10.1145/1753326.1753402},
	doi = {10.1145/1753326.1753402},
	abstract = {The ready availability of online source-code examples has fundamentally changed programming practices. However, current search tools are not designed to assist with programming tasks and are wholly separate from editing tools. This paper proposes that embedding a task-specific search engine in the development environment can significantly reduce the cost of finding information and thus enable programmers to write better code more easily. This paper describes the design, implementation, and evaluation of Blueprint, a Web search interface integrated into the Adobe Flex Builder development environment that helps users locate example code. Blueprint automatically augments queries with code context, presents a code-centric view of search results, embeds the search experience into the editor, and retains a link between copied code and its source. A comparative laboratory study found that Blueprint enables participants to write significantly better code and find example code significantly faster than with a standard Web browser. Analysis of three months of usage logs with 2,024 users suggests that task-specific search interfaces can significantly change how and when people search the Web.},
	urldate = {2014-11-18},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Brandt, Joel and Dontcheva, Mira and Weskamp, Marcos and Klemmer, Scott R.},
	year = {2010},
	keywords = {development, example-centric},
	pages = {513--522},
	file = {ACM Full Text PDF:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/HW3JCBDN/Brandt et al. - 2010 - Example-centric Programming Integrating Web Searc.pdf:application/pdf}
}

@inproceedings{brandt_example-centric_2010-1,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '10},
	title = {Example-centric Programming: Integrating Web Search into the Development Environment},
	isbn = {978-1-60558-929-9},
	shorttitle = {Example-centric Programming},
	url = {http://doi.acm.org/10.1145/1753326.1753402},
	doi = {10.1145/1753326.1753402},
	abstract = {The ready availability of online source-code examples has fundamentally changed programming practices. However, current search tools are not designed to assist with programming tasks and are wholly separate from editing tools. This paper proposes that embedding a task-specific search engine in the development environment can significantly reduce the cost of finding information and thus enable programmers to write better code more easily. This paper describes the design, implementation, and evaluation of Blueprint, a Web search interface integrated into the Adobe Flex Builder development environment that helps users locate example code. Blueprint automatically augments queries with code context, presents a code-centric view of search results, embeds the search experience into the editor, and retains a link between copied code and its source. A comparative laboratory study found that Blueprint enables participants to write significantly better code and find example code significantly faster than with a standard Web browser. Analysis of three months of usage logs with 2,024 users suggests that task-specific search interfaces can significantly change how and when people search the Web.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Brandt, Joel and Dontcheva, Mira and Weskamp, Marcos and Klemmer, Scott R.},
	year = {2010},
	keywords = {development, example-centric},
	pages = {513--522}
}

@article{eick_graphically_1994,
	title = {Graphically displaying text},
	volume = {3},
	url = {http://www.tandfonline.com/doi/abs/10.1080/10618600.1994.10474635},
	number = {2},
	urldate = {2014-11-28},
	journal = {Journal of Computational and Graphical Statistics},
	author = {Eick, Stephen G.},
	year = {1994},
	pages = {127--142},
	file = {[PDF] from kent.edu:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/5WDV6V94/Eick - 1994 - Graphically displaying text.pdf:application/pdf;Snapshot:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/6N5DGTJ4/cookieAbsent.html:text/html}
}

@article{eick_graphically_1994-1,
	title = {Graphically Displaying Text},
	volume = {3},
	issn = {1061-8600},
	url = {http://www.tandfonline.com/doi/abs/10.1080/10618600.1994.10474635},
	doi = {10.1080/10618600.1994.10474635},
	abstract = {There are many examples of text data bases, including literary corpora and computer source code, in which statistics are associated with each line. A visualization technique for this class of data represents the text lines as thin colored rows within columns. The position, length, and indentation of each row corresponds to that of the text. The color of each row is determined by a statistic associated with each line. The display looks like a miniature picture of the text with the color showing the spatial distribution of the statistic within the text. Using this technique, {SeeSoft}‚Ñ¢, a dynamic graphics software tool, can easily display 50,000 lines of text simultaneously on a high-resolution monitor.},
	number = {2},
	urldate = {2014-12-06},
	journal = {Journal of Computational and Graphical Statistics},
	author = {Eick, Stephen G.},
	month = jun,
	year = {1994},
	pages = {127--142},
	file = {Snapshot:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/3JVCVH62/login.html:text/html}
}

@inproceedings{aftandilian_heapviz:_2010,
	address = {New York, {NY}, {USA}},
	series = {{SOFTVIS} '10},
	title = {Heapviz: Interactive Heap Visualization for Program Understanding and Debugging},
	isbn = {978-1-4503-0028-5},
	shorttitle = {Heapviz},
	url = {http://doi.acm.org/10.1145/1879211.1879222},
	doi = {10.1145/1879211.1879222},
	abstract = {Understanding the data structures in a program is crucial to understanding how the program works, or why it doesn't work. Inspecting the code that implements the data structures, however, is an arduous task and often fails to yield insights into the global organization of a program's data. Inspecting the actual contents of the heap solves these problems but presents a significant challenge of its own: finding an effective way to present the enormous number of objects it contains. In this paper we present Heapviz, a tool for visualizing and exploring snapshots of the heap obtained from a running Java program. Unlike existing tools, such as traditional debuggers, Heapviz presents a global view of the program state as a graph, together with powerful interactive capabilities for navigating it. Our tool employs several key techniques that help manage the scale of the data. First, we reduce the size and complexity of the graph by using algorithms inspired by static shape analysis to aggregate the nodes that make up a data structure. Second, we introduce a dominator-based layout scheme that emphasizes hierarchical containment and ownership relations. Finally, the interactive interface allows the user to expand and contract regions of the heap to modulate data structure detail, inspect individual objects and field values, and search for objects based on type or connectivity. By applying Heapviz to both constructed and real-world examples, we show that Heapviz provides programmers with a powerful and intuitive tool for exploring program behavior.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 5th International Symposium on Software Visualization},
	publisher = {{ACM}},
	author = {Aftandilian, Edward E. and Kelley, Sean and Gramazio, Connor and Ricci, Nathan and Su, Sara L. and Guyer, Samuel Z.},
	year = {2010},
	keywords = {debugging, graphs, interactive visualization, program understanding, Software visualization},
	pages = {53--62}
}

@inproceedings{reiterer_insyder_2000,
	address = {New York, {NY}, {USA}},
	series = {{SIGIR} '00},
	title = {{INSYDER} \&Mdash; an Information Assistant for Business Intelligence},
	isbn = {1-58113-226-3},
	url = {http://doi.acm.org/10.1145/345508.345559},
	doi = {10.1145/345508.345559},
	abstract = {The {WWW} is the most important resource for external business information. This paper presents a tool called {INSYDER}, an information assistant for finding and analysis business information from the {WWW}. {INSYDER} is a system using different agents for crawling the Web, evaluating and visualising the results. These agents, the used visualisations, and a first summary of user studies are presented.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 23rd Annual International {ACM} {SIGIR} Conference on Research and Development in Information Retrieval},
	publisher = {{ACM}},
	author = {Reiterer, Harald and Mu√üler, Gabriela and Mann, Thomas M. and Handschuh, Siegfried},
	year = {2000},
	keywords = {results, (semi) automated search assistants, {UIs}\&slash, user studies, visualization organizing and displaying retieval},
	pages = {112--119}
}

@inproceedings{coblenz_jasper:_2006,
	address = {New York, {NY}, {USA}},
	series = {eclipse '06},
	title = {{JASPER}: An Eclipse Plug-in to Facilitate Software Maintenance Tasks},
	isbn = {1-59593-621-1},
	shorttitle = {{JASPER}},
	url = {http://doi.acm.org/10.1145/1188835.1188849},
	doi = {10.1145/1188835.1188849},
	abstract = {Recent research has shown that developers spend significant amounts of time navigating around code. Much of this time is spent on redundant navigations to code that the developer previously found. This is necessary today because existing development environments do not enable users to easily collect relevant information, such as web pages, textual notes, and code fragments. {JASPER} is a new system that allows users to collect relevant artifacts into a working set for easy reference. These artifacts are visible in a single view that represents the user's current task and allows users to easily make each artifact visible within its context. We predict that {JASPER} will significantly reduce time spent on redundant navigations. In addition, {JASPER} will facilitate multitasking, interruption management, and sharing task information with other developers.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 2006 {OOPSLA} Workshop on Eclipse Technology {eXchange}},
	publisher = {{ACM}},
	author = {Coblenz, Michael J. and Ko, Andrew J. and Myers, Brad A.},
	year = {2006},
	keywords = {concerns, Eclipse, natural programming, programmer efficiency, programming environments},
	pages = {65--69}
}

@inproceedings{torrey_learning_2009,
	title = {Learning how: the search for craft knowledge on the internet},
	shorttitle = {Learning how},
	url = {http://dl.acm.org/citation.cfm?id=1518908},
	urldate = {2014-10-26},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Torrey, Cristen and Churchill, Elizabeth F. and McDonald, David W.},
	year = {2009},
	pages = {1371--1380},
	file = {[PDF] from pensivepuffin.com:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/V7W45APN/Torrey et al. - 2009 - Learning how the search for craft knowledge on th.pdf:application/pdf;Snapshot:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/P4DIBUW9/citation.html:text/html}
}

@inproceedings{torrey_learning_2009-1,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '09},
	title = {Learning How: The Search for Craft Knowledge on the Internet},
	isbn = {978-1-60558-246-7},
	shorttitle = {Learning How},
	url = {http://doi.acm.org/10.1145/1518701.1518908},
	doi = {10.1145/1518701.1518908},
	abstract = {Communicating the subtleties of a craft technique, like putting a zipper into a garment or throwing a clay pot, can be challenging even when working side by side. Yet How-To content - including text, images, animations, and videos - is available online for a wide variety of crafts. We interviewed people engaged in various crafts to investigate how online resources contributed to their craft practice. We found that participants sought creative inspiration as well as technical clarification online. In this domain, keyword search can be difficult, so supplemental strategies are used. Participants sought information iteratively, because they often needed to enact their knowledge in order to evaluate it. Our description of people learning how allows us to elaborate existing understandings of information-seeking behavior by considering how search originates and is evaluated in knowledge domains involving physical objects and physical processes.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Torrey, Cristen and Churchill, Elizabeth F. and McDonald, David W.},
	year = {2009},
	keywords = {craft, diy, expertise locating, hobbies, how-to, informal learning, information seeking, search usability, social search, tutorial},
	pages = {1371--1380}
}

@inproceedings{Stylos-Mica,
	title = {Mica: A Web-Search Tool for Finding {API} Components and Examples},
	shorttitle = {Mica},
	doi = {10.1109/VLHCC.2006.32},
	abstract = {Because software libraries are numerous and large, learning how to use them is a common and problematic task for experienced programmers and novices alike. Internet search engines such as Google have emerged as important resources to help programmers successfully use {APIs}. However, observations of programmers using Web search have revealed problems and inefficiencies in their use. We present a new prototype search tool called Mica that augments standard Web search results to help programmers find the right {API} classes and methods given a description of the desired functionality, and help programmers find examples when they already know which methods to use. Mica works by using the Google Web {APIs} to find relevant pages, and then analyzing the content of those pages to extract the most relevant programming terms and to classify the type of each result},
	booktitle = {{IEEE} Symposium on Visual Languages and Human-Centric Computing, 2006. {VL}/{HCC} 2006},
	author = {Stylos, J. and Myers, B.A.},
	month = sep,
	year = {2006},
	keywords = {application program interfaces, Application software, classification, Computer science, Documentation, Google Web {API}, Internet, Java, Mica, Programming profession, search engines, software libraries, Terminology, Web search, Web search tool},
	pages = {195--202},
	file = {IEEE Xplore Abstract Record:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/3WUE2WAK/login.html:text/html}
}

@inproceedings{foltz_query_2001,
	title = {Query by attention: visually searchable information maps},
	shorttitle = {Query by attention},
	doi = {10.1109/IV.2001.942043},
	abstract = {This paper explores how the design of information spaces might be grounded in knowledge of human visual processing, notably what kinds of visual selection are most efficient. Information maps spatially array graphical symbols representing items of information and their attributes. Ideally their users should be able to do query by attention: answer questions about the information quickly by controlling visual attention (i.e., through spatial selection and visual search), instead of manipulating an interface. I propose a preliminary method for designing visually searchable maps based on experimental results about what kinds of visual search are easy. The hope is that the resulting maps will better employ the perceptual capabilities of their viewers when they search. An example information map of recent movies illustrates the approach},
	booktitle = {Fifth International Conference on Information Visualisation, 2001. Proceedings},
	author = {Foltz, M.A. and Davis, R.},
	year = {2001},
	keywords = {artificial intelligence, data visualisation, Design methodology, experimental results, Feedback, graphical symbols, Humans, human visual processing, information space design, Layout, Motion pictures, movies, Navigation, Proposals, query by attention, query processing, Two dimensional displays, visual attention, visual database, visual databases, visually searchable information maps, Visual perception},
	pages = {85--93},
	file = {IEEE Xplore Abstract Record:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/H8M5KZIW/login.html:text/html;IEEE Xplore Full Text PDF:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/J6VWTDFG/Foltz and Davis - 2001 - Query by attention visually searchable informatio.pdf:application/pdf}
}

@book{hearst_search_2009,
	address = {New York, {NY}, {USA}},
	edition = {1st},
	title = {Search User Interfaces},
	isbn = {0521113792, 9780521113793},
	abstract = {This book focuses on the human users of search engines and the tool they use to interact with them: the search user interface. The truly worldwide reach of the Web has brought with it a new realization among computer scientists and laypeople of the enormous importance of usability and user interface design. In the last ten years, much has become understood about what works in search interfaces from a usability perspective, and what does not. Researchers and practitioners have developed a wide range of innovative interface ideas, but only the most broadly acceptable make their way into major web search engines. This book summarizes these developments, presenting the state of the art of search interface design, both in academic research and in deployment in commercial systems. Many books describe the algorithms behind search engines and information retrieval systems, but the unique focus of this book is specifically on the user interface. It will be welcomed by industry professionals who design systems that use search interfaces as well as graduate students and academic researchers who investigate information systems.},
	publisher = {Cambridge University Press},
	author = {Hearst, Marti A.},
	year = {2009},
	file = {Ch. 0- Preface.pdf:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/6H8PDEXH/Ch. 0- Preface.pdf:application/pdf;Ch. 1- The Design of Search User Interfaces.pdf:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/9VVTTJJA/Ch. 1- The Design of Search User Interfaces.pdf:application/pdf;Ch. 3- Models of the Information Seeking Process.pdf:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/9CPEPMK7/Ch. 3- Models of the Information Seeking Process.pdf:application/pdf;Ch. 5- Presentation of Search Results.pdf:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/V24AP68U/Ch. 5- Presentation of Search Results.pdf:application/pdf;Ch. 10- Information Visualization for Search Interfaces.pdf:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/FEXHG2TS/Ch . 10- Information Visualization for Search Interfaces.pdf:application/pdf;Ch. 11- Information Visualization for Text Analysis:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/V5Z577AD/Hearst - 2009 - Search User Interfaces.pdf:application/pdf}
}

@inproceedings{hearst_sewing_2013,
	address = {New York, {NY}, {USA}},
	series = {{HCIR} '13},
	title = {Sewing the Seams of Sensemaking: A Practical Interface for Tagging and Organizing Saved Search Results},
	isbn = {978-1-4503-2570-7},
	shorttitle = {Sewing the Seams of Sensemaking},
	url = {http://doi.acm.org/10.1145/2528394.2528398},
	doi = {10.1145/2528394.2528398},
	abstract = {This paper presents a usability-tested interface design that enables time-constrained analysts to organize their search results in a lightweight manner during and immediately following their search sessions. The research literature suggests that users want to lay out search results spatially in overlapping "piles," but a pilot study with a flexible canvas tool revealed that this design requires too much manipulation and has other drawbacks. This finding led to a novel hybrid design that combines structure with a flexible visual layout and which allows the analysts to quickly triage documents first and organize them later, or interweave these two processes. Two usability studies comparing the new design against a legacy tool found overwhelming preference for the new tool for saving and organizing search results. Design guidelines derived from this work could improve sensemaking interfaces for other search applications.},
	urldate = {2014-10-30},
	booktitle = {Proceedings of the Symposium on Human-Computer Interaction and Information Retrieval},
	publisher = {{ACM}},
	author = {Hearst, Marti A. and Degler, Duane},
	year = {2013},
	keywords = {Organizing, Search User Interfaces, Sensemaking, Tagging},
	pages = {4:1--4:10},
	file = {ACM Full Text PDF:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/3MU65JHS/Hearst and Degler - 2013 - Sewing the Seams of Sensemaking A Practical Inter.pdf:application/pdf}
}

@inproceedings{Ko-Six,
	title = {Six Learning Barriers in End-User Programming Systems},
	doi = {10.1109/VLHCC.2004.47},
	abstract = {As programming skills increase in demand and utility, the learnability of end-user programming systems is of utmost importance. However, research on learning barriers in programming systems has primarily focused on languages, overlooking potential barriers in the environment and accompanying libraries. To address this, a study of beginning programmers learning Visual Basic.{NET} was performed. This identified six types of barriers: design, selection, coordination, use, understanding, and information. These barriers inspire a new metaphor of computation, which provides a more learner-centric view of programming system design},
	booktitle = {2004 {IEEE} Symposium on Visual Languages and Human Centric Computing},
	author = {Ko, A.J. and Myers, B.A. and Aung, H.H.},
	month = sep,
	year = {2004},
	keywords = {beginning programmers, Computer languages, computer science education, end-user programming systems, Feedback, learnability, learning barriers, Libraries, Manufacturing, programming environments, Programming profession, programming skills, programming system design, Prototypes, Robot control, Robot kinematics, Robot programming, Utility programs, Visual {BASIC}, Visual Basic.{NET}},
	pages = {199--206},
	file = {IEEE Xplore Abstract Record:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/FVXBNEKN/login.html:text/html}
}

@inproceedings{bajracharya_sourcerer:_2006,
	title = {Sourcerer: a search engine for open source code supporting structure-based search},
	shorttitle = {Sourcerer},
	url = {http://dl.acm.org/citation.cfm?id=1176671},
	urldate = {2014-11-18},
	booktitle = {Companion to the 21st {ACM} {SIGPLAN} symposium on Object-oriented programming systems, languages, and applications},
	publisher = {{ACM}},
	author = {Bajracharya, Sushil and Ngo, Trung and Linstead, Erik and Dou, Yimeng and Rigor, Paul and Baldi, Pierre and Lopes, Cristina},
	year = {2006},
	pages = {681--682},
	file = {[PDF] from aminer.org:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/FHTZFTBD/Bajracharya et al. - 2006 - Sourcerer a search engine for open source code su.pdf:application/pdf;Snapshot:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/2BRHTKRQ/citation.html:text/html}
}

@incollection{yang_sparrows_2014,
	series = {Lecture Notes in Computer Science},
	title = {Sparrows and Owls: Characterisation of Expert Behaviour in {StackOverflow}},
	copyright = {¬©2014 Springer International Publishing Switzerland},
	isbn = {978-3-319-08785-6, 978-3-319-08786-3},
	shorttitle = {Sparrows and Owls},
	url = {http://link.springer.com/chapter/10.1007/978-3-319-08786-3_23},
	abstract = {Question Answering platforms are becoming an important repository of crowd-generated knowledge. In these systems a relatively small subset of users is responsible for the majority of the contributions, and ultimately, for the success of the Q/A system itself. However, due to built-in incentivization mechanisms, standard expert identification methods often misclassify very active users for knowledgable ones, and misjudge activeness for expertise. This paper contributes a novel metric for expert identification, which provides a better characterisation of users‚Äô expertise by focusing on the quality of their contributions. We identify two classes of relevant users, namely sparrows and owls, and we describe several behavioural properties in the context of the {StackOverflow} Q/A system. Our results contribute new insights to the study of expert behaviour in Q/A platforms, that are relevant to a variety of contexts and applications.},
	language = {en},
	number = {8538},
	urldate = {2014-12-06},
	booktitle = {User Modeling, Adaptation, and Personalization},
	publisher = {Springer International Publishing},
	author = {Yang, Jie and Tao, Ke and Bozzon, Alessandro and Houben, Geert-Jan},
	editor = {Dimitrova, Vania and Kuflik, Tsvi and Chin, David and Ricci, Francesco and Dolog, Peter and Houben, Geert-Jan},
	month = jan,
	year = {2014},
	keywords = {Artificial Intelligence (incl. Robotics), e-Commerce/e-business, Expert behaviour, Expert modelling, Information Storage and Retrieval, Information Systems Applications (incl. Internet), Question answering systems, User Interfaces and Human Computer Interaction},
	pages = {266--277},
	file = {Snapshot:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/3Q7BTGCS/login.html:text/html}
}

@inproceedings{hearst_tilebars:_1995,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '95},
	title = {{TileBars}: Visualization of Term Distribution Information in Full Text Information Access},
	isbn = {0-201-84705-1},
	shorttitle = {{TileBars}},
	url = {http://dx.doi.org/10.1145/223904.223912},
	doi = {10.1145/223904.223912},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM} Press/Addison-Wesley Publishing Co.},
	author = {Hearst, Marti A.},
	year = {1995},
	pages = {59--66}
}

@inproceedings{Brandt-Opportunistic,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '09},
	title = {Two Studies of Opportunistic Programming: Interleaving Web Foraging, Learning, and Writing Code},
	isbn = {978-1-60558-246-7},
	shorttitle = {Two Studies of Opportunistic Programming},
	url = {http://doi.acm.org/10.1145/1518701.1518944},
	doi = {10.1145/1518701.1518944},
	abstract = {This paper investigates the role of online resources in problem solving. We look specifically at how programmers - an exemplar form of knowledge workers - opportunistically interleave Web foraging, learning, and writing code. We describe two studies of how programmers use online resources. The first, conducted in the lab, observed participants' Web use while building an online chat room. We found that programmers leverage online resources with a range of intentions: They engage in just-in-time learning of new skills and approaches, clarify and extend their existing knowledge, and remind themselves of details deemed not worth remembering. The results also suggest that queries for different purposes have different styles and durations. Do programmers' queries "in the wild" have the same range of intentions, or is this result an artifact of the particular lab setting? We analyzed a month of queries to an online programming portal, examining the lexical structure, refinements made, and result pages visited. Here we also saw traits that suggest the Web is being used for learning and reminding. These results contribute to a theory of online resource usage in programming, and suggest opportunities for tools to facilitate online knowledge work.},
	urldate = {2014-11-18},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Brandt, Joel and Guo, Philip J. and Lewenstein, Joel and Dontcheva, Mira and Klemmer, Scott R.},
	year = {2009},
	keywords = {copy-and-paste, opportunistic programming, prototyping},
	pages = {1589--1598},
	file = {ACM Full Text PDF:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/U73C75XX/Brandt et al. - 2009 - Two Studies of Opportunistic Programming Interlea.pdf:application/pdf}
}

@inproceedings{brandt_two_2009-1,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '09},
	title = {Two Studies of Opportunistic Programming: Interleaving Web Foraging, Learning, and Writing Code},
	isbn = {978-1-60558-246-7},
	shorttitle = {Two Studies of Opportunistic Programming},
	url = {http://doi.acm.org/10.1145/1518701.1518944},
	doi = {10.1145/1518701.1518944},
	abstract = {This paper investigates the role of online resources in problem solving. We look specifically at how programmers - an exemplar form of knowledge workers - opportunistically interleave Web foraging, learning, and writing code. We describe two studies of how programmers use online resources. The first, conducted in the lab, observed participants' Web use while building an online chat room. We found that programmers leverage online resources with a range of intentions: They engage in just-in-time learning of new skills and approaches, clarify and extend their existing knowledge, and remind themselves of details deemed not worth remembering. The results also suggest that queries for different purposes have different styles and durations. Do programmers' queries "in the wild" have the same range of intentions, or is this result an artifact of the particular lab setting? We analyzed a month of queries to an online programming portal, examining the lexical structure, refinements made, and result pages visited. Here we also saw traits that suggest the Web is being used for learning and reminding. These results contribute to a theory of online resource usage in programming, and suggest opportunities for tools to facilitate online knowledge work.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Brandt, Joel and Guo, Philip J. and Lewenstein, Joel and Dontcheva, Mira and Klemmer, Scott R.},
	year = {2009},
	keywords = {copy-and-paste, opportunistic programming, prototyping},
	pages = {1589--1598}
}

@inproceedings{baeza-yates_visualization_1996,
	title = {Visualization of large answers in text databases},
	url = {http://dl.acm.org/citation.cfm?id=948464},
	urldate = {2014-11-28},
	booktitle = {Proceedings of the workshop on Advanced visual interfaces},
	publisher = {{ACM}},
	author = {Baeza-Yates, Ricardo},
	year = {1996},
	pages = {101--107},
	file = {large_answers.pdf:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/IAV4PMSQ/large_answers.pdf:application/pdf;Snapshot:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/2VFUP2H6/citation.html:text/html}
}

@inproceedings{hartmann_what_2010,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '10},
	title = {What Would Other Programmers Do: Suggesting Solutions to Error Messages},
	isbn = {978-1-60558-929-9},
	shorttitle = {What Would Other Programmers Do},
	url = {http://doi.acm.org/10.1145/1753326.1753478},
	doi = {10.1145/1753326.1753478},
	abstract = {Interpreting compiler errors and exception messages is challenging for novice programmers. Presenting examples of how other programmers have corrected similar errors may help novices understand and correct such errors. This paper introduces {HelpMeOut}, a social recommender system that aids the debugging of error messages by suggesting solutions that peers have applied in the past. {HelpMeOut} comprises {IDE} instrumentation to collect examples of code changes that fix errors; a central database that stores fix reports from many users; and a suggestion interface that, given an error, queries the database for a list of relevant fixes and presents these to the programmer. We report on implementations of this architecture for two programming languages. An evaluation with novice programmers found that the technique can suggest useful fixes for 47\% of errors after 39 person-hours of programming in an instrumented environment.},
	urldate = {2014-11-18},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Hartmann, Bj√∂rn and MacDougall, Daniel and Brandt, Joel and Klemmer, Scott R.},
	year = {2010},
	keywords = {debugging, recommender systems},
	pages = {1019--1028},
	file = {ACM Full Text PDF:/Users/appachu/Library/Application Support/Zotero/Profiles/afr94mff.default/zotero/storage/7CA2TT3E/Hartmann et al. - 2010 - What Would Other Programmers Do Suggesting Soluti.pdf:application/pdf}
}

@inproceedings{de_pauw_zinsight:_2010,
	address = {New York, {NY}, {USA}},
	series = {{SOFTVIS} '10},
	title = {Zinsight: A Visual and Analytic Environment for Exploring Large Event Traces},
	isbn = {978-1-4503-0028-5},
	shorttitle = {Zinsight},
	url = {http://doi.acm.org/10.1145/1879211.1879233},
	doi = {10.1145/1879211.1879233},
	abstract = {Information in event traces from software systems can help developers with performance analysis, debuggingand troubleshooting. However, the volume of data contained in these traces can make such tasks a challenge. In this paper we propose a new tool, Zinsight, to visualize event traces from complex systems. Our contribution is a novel combination of visualizations and pattern extraction techniques, enabling user exploration, analysis and understanding of traces containing millions of events. Three complimentary views help the user answer different questions. First, the Event Flow view shows the trace in its entirety or in detail. The user sees visual patterns representing phases of processing and the relative order of events. Second, the Event Statistics view quantifies events, and presents distributions and averages enabling the user to identify outlier behavior. Third, the Sequence Context view extracts patterns of interest from the trace and represents them along with frequency and performance data in succinct execution flow diagrams. The user can navigate from patterns to their constituent instance sequences and even back to individual events in the other views. Questions can be answered and hypotheses tested using the most natural view for the task.},
	urldate = {2014-12-06},
	booktitle = {Proceedings of the 5th International Symposium on Software Visualization},
	publisher = {{ACM}},
	author = {De Pauw, Wim and Heisig, Steve},
	year = {2010},
	keywords = {event visualization, pattern extraction, tracing},
	pages = {143--152}
}

@techreport{Pavel:EECS-2013-167,
    Author = {Pavel, Amy and Berthouzoz, Floraine and Hartmann, Bj√É¬∂rn and Agrawala, Maneesh},
    Title = {Browsing and Analyzing the Command-Level Structure of Large Collections of Image Manipulation Tutorials},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2013},
    Month = {Oct},
    URL = {http://www.eecs.berkeley.edu/Pubs/TechRpts/2013/EECS-2013-167.html},
    Number = {UCB/EECS-2013-167},
    Abstract = {We present Sifter, an interface for browsing, comparing and analyzing large collections of image manipulation tutorials based on their command-level structure. Sifter first applies supervised machine learning to identify the commands contained in a collection of 2500 Photoshop tutorials obtained from the Web. It then provides three different views of the tutorial collection based on the extracted command-level structure: (1) A Faceted Browser View allows users to organize, sort and filter the collection based on tutorial category, command names or on frequently used command subsequences, (2) a Tutorial View summarizes and indexes tutorials by the commands they contain, and (3) an Alignment View visualizes the command-level similarities and differences between a subset of tutorials. An informal evaluation (n=9) suggests that Sifter enables users to successfully perform a variety of browsing and analysis tasks that are difficult to complete with standard keyword search. We conclude with a meta-analysis of our Photoshop tutorial collection and present several implications for the design of image manipulation software.}
}

@inproceedings{Hartmann-What,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '10},
	title = {What Would Other Programmers Do: Suggesting Solutions to Error Messages},
	isbn = {978-1-60558-929-9},
	shorttitle = {What Would Other Programmers Do},
	url = {http://doi.acm.org/10.1145/1753326.1753478},
	doi = {10.1145/1753326.1753478},
	abstract = {Interpreting compiler errors and exception messages is challenging for novice programmers. Presenting examples of how other programmers have corrected similar errors may help novices understand and correct such errors. This paper introduces {HelpMeOut}, a social recommender system that aids the debugging of error messages by suggesting solutions that peers have applied in the past. {HelpMeOut} comprises {IDE} instrumentation to collect examples of code changes that fix errors; a central database that stores fix reports from many users; and a suggestion interface that, given an error, queries the database for a list of relevant fixes and presents these to the programmer. We report on implementations of this architecture for two programming languages. An evaluation with novice programmers found that the technique can suggest useful fixes for 47\% of errors after 39 person-hours of programming in an instrumented environment.},
	urldate = {2014-11-18},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Hartmann, Bj√∂rn and MacDougall, Daniel and Brandt, Joel and Klemmer, Scott R.},
	year = {2010},
	keywords = {debugging, recommender systems},
	pages = {1019--1028},
	file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/XZ4MWE7M/Hartmann et al. - 2010 - What Would Other Programmers Do Suggesting Soluti.pdf:application/pdf}
}

@inproceedings{Ginosar-Authoring,
	title = {Authoring multi-stage code examples with editable code histories},
	url = {http://dl.acm.org/citation.cfm?id=2502053},
	urldate = {2015-01-31},
	booktitle = {Proceedings of the 26th annual {ACM} symposium on User interface software and technology},
	publisher = {{ACM}},
	author = {Ginosar, Shiry and Pombo, De and Fernando, Luis and Agrawala, Maneesh and Hartmann, Bjorn},
	year = {2013},
	pages = {485--494},
	file = {[PDF] from berkeley.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/JBWT65WM/Ginosar et al. - 2013 - Authoring multi-stage code examples with editable .pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/SIZ2N58K/citation.html:text/html}
}

@inproceedings{Hartmann-Reflective,
	address = {New York, {NY}, {USA}},
	series = {{UIST} '06},
	title = {Reflective Physical Prototyping Through Integrated Design, Test, and Analysis},
	isbn = {1-59593-313-1},
	url = {http://doi.acm.org/10.1145/1166253.1166300},
	doi = {10.1145/1166253.1166300},
	abstract = {Prototyping is the pivotal activity that structures innovation, collaboration, and creativity in design. Prototypes embody design hypotheses and enable designers to test them. Framin design as a thinking-by-doing activity foregrounds iteration as a central concern. This paper presents d.tools, a toolkit that embodies an iterative-design-centered approach to prototyping information appliances. This work offers contributions in three areas. First, d.tools introduces a statechart-based visual design tool that provides a low threshold for early-stage prototyping, extensible through code for higher-fidelity prototypes. Second, our research introduces three important types of hardware extensibility - at the hardware-to-{PC} interface, the intra-hardware communication level, and the circuit level. Third, d.tools integrates design, test, and analysis of information appliances. We have evaluated d.tools through three studies: a laboratory study with thirteen participants; rebuilding prototypes of existing and emerging devices; and by observing seven student teams who built prototypes with d.tools.},
	urldate = {2014-12-29},
	booktitle = {Proceedings of the 19th Annual {ACM} Symposium on User Interface Software and Technology},
	publisher = {{ACM}},
	author = {Hartmann, Bj√∂rn and Klemmer, Scott R. and Bernstein, Michael and Abdulla, Leith and Burr, Brandon and Robinson-Mosher, Avi and Gee, Jennifer},
	year = {2006},
	keywords = {design thinking, design tools, information appliances, integrating physical \& digital, prototyping, toolkits},
	pages = {299--308},
	file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/SJJN8B3I/Hartmann et al. - 2006 - Reflective Physical Prototyping Through Integrated.pdf:application/pdf}
}

@article{Goldman-CodeTrail,
	title = {Codetrail: Connecting source code and web resources},
	volume = {20},
	shorttitle = {Codetrail},
	url = {http://www.sciencedirect.com/science/article/pii/S1045926X09000263},
	number = {4},
	urldate = {2015-01-13},
	journal = {Journal of Visual Languages \& Computing},
	author = {Goldman, Max and Miller, Robert C.},
	year = {2009},
	pages = {223--235},
	file = {[PDF] from mit.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/PGJJ37KI/Goldman and Miller - 2009 - Codetrail Connecting source code and web resource.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/FG7H67TD/S1045926X09000263.html:text/html}
}

@inproceedings{Hartmann-HyperSource,
	title = {{HyperSource}: bridging the gap between source and code-related web sites},
	shorttitle = {{HyperSource}},
	url = {http://dl.acm.org/citation.cfm?id=1979263},
	urldate = {2015-01-13},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Hartmann, Bj√∂rn and Dhillon, Mark and Chan, Matthew K.},
	year = {2011},
	pages = {2207--2210},
	file = {[PDF] from berkeley.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/VMKKQSZA/Hartmann et al. - 2011 - HyperSource bridging the gap between source and c.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/MQEVTCIK/citation.html:text/html}
}

@inproceedings{Wightman-SnipMatch,
	title = {Snipmatch: using source code context to enhance snippet retrieval and parameterization},
	shorttitle = {Snipmatch},
	url = {http://dl.acm.org/citation.cfm?id=2380145},
	urldate = {2015-01-13},
	booktitle = {Proceedings of the 25th annual acm symposium on user interface software and technology},
	publisher = {{ACM}},
	author = {Wightman, Doug and Ye, Zi and Brandt, Joel and Vertegaal, Roel},
	year = {2012},
	pages = {219--228},
	file = {[PDF] from joelbrandt.org:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/XK8SRXCS/Wightman et al. - 2012 - Snipmatch using source code context to enhance sn.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/UWIIJJNC/citation.html:text/html}
}

@inproceedings{Hartmann-Dmix,
	title = {Programming by a sample: rapidly creating web applications with d. mix},
	shorttitle = {Programming by a sample},
	url = {http://dl.acm.org/citation.cfm?id=1294254},
	urldate = {2015-01-13},
	booktitle = {Proceedings of the 20th annual {ACM} symposium on User interface software and technology},
	publisher = {{ACM}},
	author = {Hartmann, Bj√∂rn and Wu, Leslie and Collins, Kevin and Klemmer, Scott R.},
	year = {2007},
	pages = {241--250},
	file = {[PDF] from bjoern.org:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/25GU6C5F/Hartmann et al. - 2007 - Programming by a sample rapidly creating web appl.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/4CBGWM98/citation.html:text/html}
}

@inproceedings{McMillan-Portfolio,
	title = {Portfolio: finding relevant functions and their usage},
	shorttitle = {Portfolio},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6032450},
	urldate = {2015-01-13},
	booktitle = {Software Engineering ({ICSE}), 2011 33rd International Conference on},
	publisher = {{IEEE}},
	author = {McMillan, Collin and Grechanik, Mark and Poshyvanyk, Denys and Xie, Qing and Fu, Chen},
	year = {2011},
	pages = {111--120},
	file = {[PDF] from researchgate.net:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/RNE42XN8/McMillan et al. - 2011 - Portfolio finding relevant functions and their us.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/SX9CSDWG/cookiedetectresponse.html:text/html}
}

@inproceedings{Duala-Ekoko-Asking,
	title = {Asking and answering questions about unfamiliar {APIs}: An exploratory study},
	shorttitle = {Asking and answering questions about unfamiliar {APIs}},
	url = {http://dl.acm.org/citation.cfm?id=2337255},
	urldate = {2015-01-13},
	booktitle = {Proceedings of the 2012 International Conference on Software Engineering},
	publisher = {{IEEE} Press},
	author = {Duala-Ekoko, Ekwa and Robillard, Martin P.},
	year = {2012},
	pages = {266--276},
	file = {[PDF] from mcgill.ca:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/5PFRQISP/Duala-Ekoko and Robillard - 2012 - Asking and answering questions about unfamiliar AP.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/Q87CMKFF/citation.html:text/html}
}

@inproceedings{Dorn-Interleaved,
	address = {New York, {NY}, {USA}},
	series = {{CHI} '10},
	title = {Learning on the Job: Characterizing the Programming Knowledge and Learning Strategies of Web Designers},
	isbn = {978-1-60558-929-9},
	shorttitle = {Learning on the Job},
	url = {http://doi.acm.org/10.1145/1753326.1753430},
	doi = {10.1145/1753326.1753430},
	abstract = {This paper reports on a study of professional web designers and developers. We provide a detailed characterization of their knowledge of fundamental programming concepts elicited through card sorting. Additionally, we present qualitative findings regarding their motivation to learn new concepts and the learning strategies they employ. We find a high level of recognition of basic concepts, but we identify a number of concepts that they do not fully understand, consider difficult to learn, and use infrequently. We also note that their learning process is motivated by work projects and often follows a pattern of trial and error. We conclude with implications for end-user programming researchers.},
	urldate = {2015-01-20},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Dorn, Brian and Guzdial, Mark},
	year = {2010},
	keywords = {informal learning, web development},
	pages = {703--712},
	file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/D2RGT2UC/Dorn and Guzdial - 2010 - Learning on the Job Characterizing the Programmin.pdf:application/pdf}
}

@inproceedings{Nasehi-What,
	title = {What makes a good code example?: A study of programming Q amp;A in {StackOverflow}},
	shorttitle = {What makes a good code example?},
	doi = {10.1109/ICSM.2012.6405249},
	abstract = {Programmers learning how to use an {API} or a programming language often rely on code examples to support their learning activities. However, what makes for an effective ode example remains an open question. Finding the haracteristics of the effective examples is essential in improving the appropriateness of these learning aids. To help answer this question we have onducted a qualitative analysis of the questions and answers posted to a programming Q\&A web site called {StackOverflow}. On {StackOverflow} answers can be voted on, indicating which answers were found helpful by users of the site. By analyzing these well-received answers we identified haracteristics of effective examples. We found that the explanations acompanying examples are as important as the examples themselves. Our findings have implications for the way the {API} documentation and example set should be developed and evolved as well as the design of the tools assisting the development of these materials.},
	booktitle = {2012 28th {IEEE} International Conference on Software Maintenance ({ICSM})},
	author = {Nasehi, S.M. and Sillito, J. and Maurer, F. and Burns, C.},
	month = sep,
	year = {2012},
	keywords = {{API}, {API} documentation, {API} example, application program interfaces, application programming interface, Best practices, code example, Conferences, Documentation, java, learning activity, learning aid, programming, programming language, programming languages, programming Q and A web site, qualitative analysis, question-and-answer, social learning, software maintenance, {StackOverflow}, Web sites},
	pages = {25--34},
	file = {IEEE Xplore Abstract Record:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/9RGUDR6N/abs_all.html:text/html;IEEE Xplore Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/IZAMKWZR/Nasehi et al. - 2012 - What makes a good code example A study of progra.pdf:application/pdf}
}

@inproceedings{Parnin-Measuring,
	title = {Measuring api documentation on the web},
	url = {http://dl.acm.org/citation.cfm?id=1984706},
	urldate = {2015-01-21},
	booktitle = {Proceedings of the 2nd international workshop on Web 2.0 for software engineering},
	publisher = {{ACM}},
	author = {Parnin, Chris and Treude, Christoph},
	year = {2011},
	pages = {25--30},
	file = {[PDF] from gatech.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/XENQ5UJJ/Parnin and Treude - 2011 - Measuring api documentation on the web.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/D3GG3J8W/citation.html:text/html}
}

@article{Parnin-Crowd,
	title = {Crowd documentation: Exploring the coverage and the dynamics of {API} discussions on Stack Overflow},
	shorttitle = {Crowd documentation},
	url = {http://scholar.google.com/scholar?cluster=2302637666521001017&hl=en&oi=scholarr},
	urldate = {2015-01-21},
	journal = {Georgia Institute of Technology, Tech. Rep},
	author = {Parnin, Chris and Treude, Christoph and Grammel, Lars and Storey, Margaret-Anne},
	year = {2012},
	file = {[PDF] from gatech.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/2BPTKHP7/Parnin et al. - 2012 - Crowd documentation Exploring the coverage and th.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/G6TM7QIT/scholar.html:text/html}
}

@inproceedings{Vasilescu-How,
	title = {How social Q\&A sites are changing knowledge sharing in open source software communities},
	url = {http://dl.acm.org/citation.cfm?id=2531659},
	urldate = {2015-01-31},
	booktitle = {Proceedings of the 17th {ACM} conference on Computer supported cooperative work \& social computing},
	publisher = {{ACM}},
	author = {Vasilescu, Bogdan and Serebrenik, Alexander and Devanbu, Prem and Filkov, Vladimir},
	year = {2014},
	pages = {342--354},
	file = {[PDF] from ucdavis.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/AZSUT8NN/Vasilescu et al. - 2014 - How social Q&A sites are changing knowledge sharin.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/JWE3P8QD/citation.html:text/html}
}

@incollection{Head-ToneWars,
	title = {{ToneWars}: Connecting Language Learners and Native Speakers through Collaborative Mobile Games},
	shorttitle = {{ToneWars}},
	url = {http://link.springer.com/chapter/10.1007/978-3-319-07221-0_46},
	urldate = {2015-02-06},
	booktitle = {Intelligent Tutoring Systems},
	publisher = {Springer},
	author = {Head, Andrew and Xu, Yi and Wang, Jingtao},
	year = {2014},
	pages = {368--377},
	file = {[PDF] from pitt.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/ZI9VTMHE/Head et al. - 2014 - ToneWars Connecting Language Learners and Native .pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/BP2QNH79/978-3-319-07221-0_46.html:text/html}
}

@inproceedings{Karrer-Stacksplorer,
	title = {Stacksplorer: call graph navigation helps increasing code maintenance efficiency},
	shorttitle = {Stacksplorer},
	url = {http://dl.acm.org/citation.cfm?id=2047225},
	urldate = {2015-02-06},
	booktitle = {Proceedings of the 24th annual {ACM} symposium on User interface software and technology},
	publisher = {{ACM}},
	author = {Karrer, Thorsten and Kr√§mer, Jan-Peter and Diehl, Jonathan and Hartmann, Bj√∂rn and Borchers, Jan},
	year = {2011},
	pages = {217--224},
	file = {[PDF] from berkeley.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/7XUPDCUC/Karrer et al. - 2011 - Stacksplorer call graph navigation helps increasi.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/ZEDIZP4J/citation.html:text/html}
}

@article{Furnas-Vocabulary,
	title = {The vocabulary problem in human-system communication},
	volume = {30},
	url = {http://dl.acm.org/citation.cfm?id=32212},
	number = {11},
	urldate = {2015-02-09},
	journal = {Communications of the {ACM}},
	author = {Furnas, George W. and Landauer, Thomas K. and Gomez, Louis M. and Dumais, Susan T.},
	year = {1987},
	pages = {964--971},
	file = {[PDF] from uio.no:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/NAJ4KVCE/Furnas et al. - 1987 - The vocabulary problem in human-system communicati.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/HJ4X5CII/citation.html:text/html}
}

@inproceedings{de_Souza-Automatic,
	title = {Automatic evaluation of {API} usability using complexity metrics and visualizations},
	doi = {10.1109/ICSE-COMPANION.2009.5071006},
	abstract = {{APIs} are one of the most important concepts in today's modern software engineering. They allow software developers to work independently and minimize the impact caused by changes in the implementation of software services. Despite their importance, currently there are only a few approaches that guide the design of an {API}. In this paper, we present an approach, and associated tool, that allows an {API} client (developer) to evaluate the usability of an {API} and decide whether to use it (release it). In this aspect, our approach goes beyond previous approaches by performing this complexity and usability {API} analysis automatically.},
	booktitle = {31st International Conference on Software Engineering - Companion Volume, 2009. {ICSE}-Companion 2009},
	author = {de Souza, C.R.B. and Bentolila, D.L.M.},
	month = may,
	year = {2009},
	keywords = {{API} usability, application program interfaces, automatic evaluation, complexity metrics, Computer languages, data visualization, Guidelines, Inspection, java, Packaging, Performance analysis, programming, Software engineering, software metrics, software performance evaluation, Usability, visualizations},
	pages = {299--302},
	file = {IEEE Xplore Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/9DAA2B4Z/de Souza and Bentolila - 2009 - Automatic evaluation of API usability using comple.pdf:application/pdf}
}

@article{Bates-Design,
	title = {The design of browsing and berrypicking techniques for the online search interface},
	volume = {13},
	url = {http://www.emeraldinsight.com/doi/abs/10.1108/eb024320},
	number = {5},
	urldate = {2015-02-10},
	journal = {Online review},
	author = {Bates, Marcia J.},
	year = {1989},
	pages = {407--424},
	file = {[PDF] from rutgers.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/2X89TMR2/Bates - 1989 - The design of browsing and berrypicking techniques.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/9Z4RFXA6/cookieAbsent.html:text/html}
}
